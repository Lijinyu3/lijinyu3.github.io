<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>StudyNotes on Lijinyu&#39;s Hugo blog</title>
    <link>https://206031.xyz/studynotes/</link>
    <description>Recent content in StudyNotes on Lijinyu&#39;s Hugo blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 02 Feb 2020 00:30:15 +0800</lastBuildDate><atom:link href="https://206031.xyz/studynotes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>printf与scanf中double与float参数的区别</title>
      <link>https://206031.xyz/studynotes/conversionspecifier/</link>
      <pubDate>Thu, 18 Feb 2021 19:08:28 +0800</pubDate>
      
      <guid>https://206031.xyz/studynotes/conversionspecifier/</guid>
      <description>一、我的疑惑 之前一直认为在printf与scanf中，对于单精度浮点（float）的参数中的转换说明符（conversion specifier），也就是%f，意味着float的缩写，也就是单精度的浮点数。
而%lf就是双精度浮点（double），像long int与int的关系一样，刚好l为long的缩写修饰f。同理，long double实际上就是long long float，刚好对应的转换说明符是%llf（%Lf）。
这样一切看起来都非常和谐，可是在C Primer Plus 6E中提到了double类型在printf函数中是可以用%f输出但在scanf中不行，在K&amp;amp;R C中也提到了这句话，且printf的转换说明符表格中指明了%f是对于double类型的，而压根就没有%lf的事。
这就很奇怪了，怎么scanf就必须%lf和%f泾渭分明，到了printf就穿一条裤子了呢，而对于long double类型，又不一样了。
 二、C语言的默认浮点类型与类型转换 在C语言中，浮点的默认类型是双精度浮点double，也就是说，除非函数原型指明了参数是float，不然float在当作参数传入时都会进行参数转换，让float变成参数。而double的大小又是大于float的，所以当float转化为double时不会损失任何精度。
同样的道理，int是C语言中整型的默认类型。所以int的输出转换说明符是%d，这也是char，short这些整型的变量类型作为十进制数字输出的转换说明符。
那怎么为什么long double是%Lf而不是像上面的float一样被转化成double用%f呢？这个问题其实很简单，C语言的类型转换规则就是低往高转，什么叫低往高转？
整型和浮点型相遇的时候，浮点能囊括小数点而整型不行，显然浮点表现能力更广，它就更高，整型要转化为浮点再继续运算；或者同类型的，double与float相遇，double的字节比float字节多，那么它就更高。
因此，long double本身就比默认浮点类型double更高级（更大），为什么要冒着丢失精度的风险转换为double呢。整型中也是同样的道理，long int是%ld，同理long long int。
 三、scanf的参数 那么scanf中怎么float和double又不一样了呢。在scanf读入数据时，它需要一个地址来存储当前读取到的数据。这时候它的参数并不是像printf一样是一个数值，而是需要一个指针，指向用来存储数据的地址。
这样的话，把宽度说明清楚就很有必要了，毕竟scanf也不知道这个浮点是4字节还是2字节，万一访问到自己不该访问的地方，CPU直接给你一个Segmentation Fault把你进程kill掉了就得不偿失了。
因此，在读取数据存储的时候，你需要指明给了多少空间，这样宽度修饰符就很有必要了。对于整型也是同理。</description>
    </item>
    
    <item>
      <title>Win10快捷键笔记</title>
      <link>https://206031.xyz/studynotes/win10hotkeys/</link>
      <pubDate>Fri, 07 Feb 2020 17:59:14 +0800</pubDate>
      
      <guid>https://206031.xyz/studynotes/win10hotkeys/</guid>
      <description>这里记录一下Windows10的快捷键。方便后续使用。
 一、快捷键 1.Win键类 Win+L	快速锁屏
Win+E	打开我的电脑
Win+D	进入桌面（相当于右下角的显示桌面）
Win+R	打开运行功能
Win+↑↓←→	对当前窗口分屏/位置改变
Win+Tab	新建电脑桌面
Win+空格	切换多个输入法
Win+I	打开设置
Win+数字	打开任务栏第N个程序
Win+W	打开ink工作区
Win+Q	打开搜索
2.Ctrl键类 Ctrl+Shift+N	快速创建文件夹/无痕窗口
Ctrl+Shift+Del 删除浏览器缓存
Ctrl+N	新建
Ctrl+O	打开文件
Ctrl+A	全选
Ctrl+F/H	查找、替换
Ctrl+鼠标拖动 快速创建副本
Ctrl+N	快速创建同级别界面
Ctrl+Shift+T 恢复删除的网页
Ctrl+Z\Y	撤回\恢复
Ctrl+W	关闭当前文档、网页
3.Shift键类 Shift+Delete 永久删除
Shift+Ctrl+Esc 打开任务管理器
Shift+Win+S	截屏
4.Alt键类 Alt+F4 关闭当前的应用
Alt+Enter/2 Click	快速查看文件属性
Alt+Ctrl+Del	打开安全窗口
Alt+Esc	在没有最小化的窗口间切换
Alt+PrtScn	对当前程序/窗口截屏
Windows打开上层文件夹快捷键——【Alt+↑】
Windows切换到下一次后打开的文件夹快捷键——【Alt+→】</description>
    </item>
    
    <item>
      <title>Markdown基本语法</title>
      <link>https://206031.xyz/studynotes/markdown/</link>
      <pubDate>Sat, 01 Feb 2020 03:50:58 +0800</pubDate>
      
      <guid>https://206031.xyz/studynotes/markdown/</guid>
      <description>一、摘要 本博客都是用Markdown文件写作的，故写一篇博客存储md语法。
 Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。 --摘自百度百科
优点： Markdown是纯文本，只要支持该格式的地方就能获得一样的边际效果。
缺点： 语法要记住的多；有的地方不支持本格式。
 二、基本语法 2.1 标题 # 一级标题 
## 二级标题 
### 三级标题 
#### 四级标题 
##### 五级标题 
###### 最小只有六级标题
2.2 文本样式  加粗：**加粗** 效果：用于加粗字体。 斜体：*斜体* 效果：倾斜字体。 代码引用：&amp;gt;代码引用 效果：(可以嵌套引用)   代码引用
   超链接：[Title](Url) 效果：超链接
  高亮：==高亮== 效果：== 高亮 ==（原版标准不存在）
  列表：* 列表 效果：如上一行所示。
  分割线：--- 效果：
   删除线：~~删除~~ 效果：删除
  2.3 其他   图片：!</description>
    </item>
    
    <item>
      <title>各类语言的比较</title>
      <link>https://206031.xyz/studynotes/test2/</link>
      <pubDate>Thu, 01 Aug 2019 13:30:10 +0800</pubDate>
      
      <guid>https://206031.xyz/studynotes/test2/</guid>
      <description>各种语言的学习  一、Java语言 Java有一个丰富的生态圈
重要、必学！后端，企业、公司开发的语言。
很好找工作。
Spring全家桶（框架）
 二、C语言 经典。
通信专业、电子
用于嵌入式系统 e.g.单片机
效率很高，接近机器语言。
 三、Python语言 是一种数字分析计算语言
与数字有关的行业
机器学习 Machine Learning
丰富的第三方开源库
爬虫
也可以做Web后端服务
 四、C++语言 C的外延，却与C不是一种语言。
很有设计思想的语言。
难
 五、JavaScript语言 全栈语言
最广泛应用于交互网页。
用于网站前端
也可以用于做后端，得益于node.js
 六、C#语言 语法很像Java
可以做桌面应用
也可以做后端
 七、PHP语言**（世界上最好的语言）** 服务器脚本
可以做后端服务器框架
 八、SQL语言 必学
数据查询
优化它很重要
 九、Objective-C ＆ Swift 开发iOS的
 十、MATLAB 科研语言
商业较少
读研很重要
数学的东西很擅长
十一、Golang语言 Google发布
推荐学习
速度极快！媲美C/C++！
也可以做web后端
Hugo的博客是golang写的。
 十二、Groovy语言 脚本语言
可以与Java语言互相调用。</description>
    </item>
    
    <item>
      <title>你好</title>
      <link>https://206031.xyz/studynotes/test3/</link>
      <pubDate>Thu, 01 Aug 2019 13:29:56 +0800</pubDate>
      
      <guid>https://206031.xyz/studynotes/test3/</guid>
      <description>测试一下  过几天要过生日了哈哈哈</description>
    </item>
    
  </channel>
</rss>
